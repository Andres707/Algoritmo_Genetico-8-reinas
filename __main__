# Andres Julian
from builtins import print
from pip._vendor.distlib.compat import raw_input
import Funciones
#poblacion
Matriz = []
Fitnes = []
Ganadores = []
poblacion = int(raw_input('Ingrese el numero de individuos: '))
re = int(raw_input('Ingrese el numero de Repeticiones: '))
bandera = True
while (bandera):
    proCruse = float(raw_input('Ingrese la probabilidad de cruce (0.65 a 0.85): '))
    if (proCruse >= 0.65):
        if (proCruse <= 0.85):
            print("Probabilidad de cruce establecida: ", proCruse)
            bandera = False
        else:
            print("Inserte una probabilidad v치lida.")
    else:
        print("Inserte una probabilidad v치lida.")
bandera=True
while(bandera):
    proMutacion = float(raw_input('Ingrese la probabilidad de mutacion (0.01 a 0.1): '))
    if (proMutacion >= 0.01):
        if(proMutacion<=0.1):
            print("Probabilidad de cruce establecida: ", proMutacion)
            bandera = False
        else:
            print("Inserte una probabilidad v치lida.")
    else:
        print("Inserte una probabilidad v치lida.")
#Crea la poblacion
for m in range(poblacion):
    Matriz.append(Funciones.cadenaN(9))
#Imprime la poblacion
for i in range(poblacion):
    print ("Individuo", (i+1), ": ", Matriz[i])
for secuencia in range(re):
    print("Repeticion ",secuencia+1)
    #Sacamos Fitness
    Fitnes=(Funciones.valoracion(Matriz,poblacion))
    for fit in range (poblacion):
        print("Fitnes Individuo", (fit+1),":", Fitnes[fit])
    axx=Fitnes.count(0)
    #Obtener ganadores
    Ganadores=(Funciones.torneo(Fitnes,poblacion))
    for gan in range (2):
        print("Padre", (gan+1),":", Ganadores[gan])
    #Probabilidad Cruse
    probCruce = Funciones.Probabilidad()
    print("Probabilidad aleatoria: ", probCruce)
    if(probCruce>proCruse):
        hijos = []
        print("hijos igual a los padres")
        Ganadores[0]=Ganadores[0]-1
        Ganadores[1]=Ganadores[1]-1
        for hj in range(2):
            hij=Matriz[Ganadores[hj]]
            hijos.append(hij)
    else:
        hijos=Funciones.cruse(Ganadores,Matriz)
    #Fin Probabilidad Cruse
    for hj in range(2):
        print("hijo",hj+1,": ",hijos[hj])
    #Probabilidad Mutacion
    probMutacion = Funciones.Probabilidad()
    print("Probabilidad aleatoria: ", probMutacion)
    if(probMutacion>proMutacion):
        print("sin mutacion")
    else:
        for hm in range(2):
            hijos[hm] = Funciones.mutacion_un_hijo(hijos[hm])
        for hj in range(2):
            print("hijo", hj + 1, ": ", hijos[hj])
    #Fin Probabilidad Mutacion
    FitnesHijos=Funciones.valoracion(hijos,2)
    for fh in range(2):
        print("hijo Fitnes", fh + 1, ": ", FitnesHijos[fh])
    sel=Funciones.seleccion(Ganadores,FitnesHijos,Fitnes)
    if(sel[0]==11):
        Matriz[Ganadores[0]]=hijos[0]
    if(sel[1]==22):
        Matriz[Ganadores[1]]=hijos[1]
    for i in range(poblacion):
        print ("Individuo", (i+1), ": ", Matriz[i])
print("-------------------------Fin-----------------------------------")
Fitnes = (Funciones.valoracion(Matriz, poblacion))
Ganador=0
for i in range(poblacion):
       print ("Individuo", (i+1), ": ", Matriz[i],"Fitnes :",Fitnes[i])
       if(Fitnes[Ganador]>Fitnes[i]):
            Ganador=i
print("numero de individuaos con un 0: ",axx)
print("Ganador: ",Ganador+1)
print(Matriz[Ganador])